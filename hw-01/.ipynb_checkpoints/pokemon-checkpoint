

<!DOCTYPE html>
<html lang="en">

<head>
  <title>Pokemon Dataset | Kaggle</title>
  <meta charset="utf-8" />
    <meta name="robots" content="index, follow" />
  <meta name="description" content="900 Pokemon with stats and types" />
    <meta name="keywords" content="earth and nature,games,video games" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, minimum-scale=1.0">
  <meta name="theme-color" content="#008ABC" />
  <script nonce="onrkCvZTjD5mASaVwNDldw==" type="text/javascript">
    window["pageRequestStartTime"] = 1738896796272;
    window["pageRequestEndTime"] = 1738896796353;
    window["initialPageLoadStartTime"] = new Date().getTime();
  </script>
  <script nonce="onrkCvZTjD5mASaVwNDldw==" id="gsi-client" src="https://accounts.google.com/gsi/client" async defer></script>
  <script nonce="onrkCvZTjD5mASaVwNDldw==">window.KAGGLE_JUPYTERLAB_PATH = "/static/assets/jupyterlab-v4/jupyterlab-index-f93bae5f0f6a91592872.html";</script>
  <link rel="preconnect" href="https://www.google-analytics.com" crossorigin="anonymous" /><link rel="preconnect" href="https://stats.g.doubleclick.net" /><link rel="preconnect" href="https://storage.googleapis.com" /><link rel="preconnect" href="https://apis.google.com" />
    <link href="/static/images/favicon.ico" rel="shortcut icon" type="image/x-icon" id="dynamic-favicon" />
  <link rel="manifest" href="/static/json/manifest.json" crossorigin="use-credentials">


  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

  <link href="https://fonts.googleapis.com/css?family=Inter:400,400i,500,500i,600,600i,700,700i&display=swap"
    rel="preload" as="style" />
  <link href="https://fonts.googleapis.com/css2?family=Google+Symbols:FILL@0..1&display=block"
    rel="preload" as="style" />
  <link href="https://fonts.googleapis.com/css?family=Inter:400,400i,500,500i,600,600i,700,700i&display=swap"
    rel="stylesheet" media="print" id="async-google-font-1" />
  <link href="https://fonts.googleapis.com/css2?family=Google+Symbols:FILL@0..1&display=block"
    rel="stylesheet" media="print" id="async-google-font-2" />
  <script nonce="onrkCvZTjD5mASaVwNDldw==" type="text/javascript">
    const styleSheetIds = ["async-google-font-1", "async-google-font-2"];
    styleSheetIds.forEach(function (id) {
      document.getElementById(id).addEventListener("load", function() {
        this.media = "all";
      });
    });
  </script>


    <link rel="canonical" href="https://www.kaggle.com/datasets/jaidalmotra/pokemon-dataset" />
    <link rel="stylesheet" type="text/css" href="/static/assets/app.css?v=2d4e7ec4eb689d926191" />

  
    
 
      <script nonce="onrkCvZTjD5mASaVwNDldw==">
        try{(function(a,s,y,n,c,h,i,d,e){d=s.createElement("style");
        d.appendChild(s.createTextNode(""));s.head.appendChild(d);d=d.sheet;
        y=y.map(x => d.insertRule(x + "{ opacity: 0 !important }"));
        h.start=1*new Date;h.end=i=function(){y.forEach(x => x<d.cssRules.length ? d.deleteRule(x) : {})};
        (a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
        })(window,document,['.site-header-react__nav'],'dataLayer',2000,{'GTM-52LNT9S':true});}catch(ex){}
    </script>
    <script nonce="onrkCvZTjD5mASaVwNDldw==">
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());
        gtag('config', 'G-T7QHS60L4Q', {
            'optimize_id': 'GTM-52LNT9S',
            'displayFeaturesTask': null,
            'send_page_view': false,
            'content_group1': 'Datasets'
        });
    </script>
    <script nonce="onrkCvZTjD5mASaVwNDldw==" async src="https://www.googletagmanager.com/gtag/js?id=G-T7QHS60L4Q"></script>

  
    
    <meta property="og:url" content="https://www.kaggle.com/datasets/jaidalmotra/pokemon-dataset" />
    <meta property="og:title" content="Pokemon Dataset" />
    <meta property="og:description" content="900 Pokemon with stats and types" />
    <meta property="og:type" content="website" />
    <meta property="og:image" content="https://storage.googleapis.com/kaggle-datasets-images/4910903/8271275/49f40765a3e9f0652f45667c1e23e41c/dataset-card.png?t=2024-04-30-10-42-34" />
    <meta property="fb:app_id" content="2665027677054710" />

    <meta name="twitter:card" content="summary" />
    <meta name="twitter:site" content="@kaggledatasets" />


  <meta name="twitter:site" content="@Kaggle" /> 
  
    
            <script nonce="onrkCvZTjD5mASaVwNDldw==" type="application/ld+json">{"@context":"http://schema.org/","@type":"Dataset","name":"Pokemon Dataset","description":"This data set includes 898 Pokemon, 1072 including alternate forms, including their number, name, first and second type, the stat total and basic stats: HP, Attack, Defense, Special Attack, Special Defense, and Speed, generation, and legendary status. It has been of great use when teaching statistics to kids. With certain types you can also give a geeky introduction to machine learning.\n\nThese are the raw attributes that are used for calculating how much damage an attack will do in the games. This dataset is about the pokemon games (NOT pokemon cards or Pokemon Go).\n\nNumber: The ID for each pokemon\n\nName: The name of each pokemon\n\nType 1: Each pokemon has a type, this determines weakness/resistance to attacks\n\nType 2: Some pokemon are dual type and have 2\n\nTotal: Sum of all stats that come after this, a general guide to how strong a pokemon is\n\nHP: Hit points, or health, defines how much damage a pokemon can withstand before fainting\n\nAttack: The base modifier for normal attacks (eg. Scratch, Punch)\n\nDefense: The base damage resistance against normal attacks\n\nSP Atk: Special attack, the base modifier for special attacks (e.g. fire blast, bubble beam)\n\nSP Def: Special defense, the base damage resistance against special attacks\n\nSpeed: Determines which pokemon attacks first each round\n\nGeneration: The generation of games where the pokemon was first introduced\n\nLegendary: Some pokemon are much rarer than others, and are dubbed \"legendary\"\n\nInspiration: The type of a pokemon cannot be inferred only by its Attack and Defense. It would be worthy to find which two variables can define the type of a pokemon, if any. Two variables can be plotted in a 2D space, and used as an example for machine learning. This could mean the creation of a visual example any geeky Machine Learning class would love.","url":"https://www.kaggle.com/jaidalmotra/pokemon-dataset","version":1,"keywords":["subject, earth and nature","subject, culture and humanities, games","subject, culture and humanities, games, video games"],"license":{"@type":"CreativeWork","name":"MIT","url":"https://www.mit.edu/~amini/LICENSE.md"},"identifier":["4910903"],"includedInDataCatalog":{"@type":"DataCatalog","name":"Kaggle","url":"https://www.kaggle.com"},"creator":{"@type":"Person","name":"Jai Dalmotra","url":"https://www.kaggle.com/jaidalmotra","image":"https://storage.googleapis.com/kaggle-avatars/thumbnails/15583641-kg.jpg?t=2023-10-22-00-21-43"},"distribution":[{"@type":"DataDownload","requiresSubscription":true,"encodingFormat":"zip","fileFormat":"zip","contentUrl":"https://www.kaggle.com/datasets/jaidalmotra/pokemon-dataset/download?datasetVersionNumber=1","contentSize":"19954 bytes"}],"commentCount":1,"dateModified":"2024-04-30T10:38:36.363Z","discussionUrl":"https://www.kaggle.com/jaidalmotra/pokemon-dataset/discussion","alternateName":"900 Pokemon with stats and types","isAccessibleForFree":true,"thumbnailUrl":"https://storage.googleapis.com/kaggle-datasets-images/4910903/8271275/49f40765a3e9f0652f45667c1e23e41c/dataset-card.png?t=2024-04-30-10-42-34","interactionStatistic":[{"@type":"InteractionCounter","interactionType":"http://schema.org/CommentAction","userInteractionCount":1},{"@type":"InteractionCounter","interactionType":"http://schema.org/DownloadAction","userInteractionCount":3513},{"@type":"InteractionCounter","interactionType":"http://schema.org/ViewAction","userInteractionCount":15632},{"@type":"InteractionCounter","interactionType":"http://schema.org/LikeAction","userInteractionCount":70}]}</script>
        

  
    

  
    


    <script nonce="onrkCvZTjD5mASaVwNDldw==">window['useKaggleAnalytics'] = true;</script>

  <script id="gapi-target" nonce="onrkCvZTjD5mASaVwNDldw==" src="https://apis.google.com/js/api.js" defer
    async></script>
  <script nonce="onrkCvZTjD5mASaVwNDldw==" src="/static/assets/runtime.js?v=7939c04033d0cad8e845"></script>
  <script nonce="onrkCvZTjD5mASaVwNDldw==" src="/static/assets/vendor.js?v=a62013a985d655b5d6e4"></script>
  <script nonce="onrkCvZTjD5mASaVwNDldw==" src="/static/assets/app.js?v=59538cab377c12cdafe5"></script>
    <script nonce="onrkCvZTjD5mASaVwNDldw==" type="text/javascript">
      window.kaggleStackdriverConfig = {
        key: 'AIzaSyA4eNqUdRRskJsCZWVz-qL655Xa5JEMreE',
        projectId: 'kaggle-161607',
        service: 'web-fe',
        version: 'ci',
        userId: '0'
      }
    </script>
</head>
<body>
  <div id="root">
    








<script nonce="onrkCvZTjD5mASaVwNDldw==" type="text/x-mathjax-config">
    MathJax.Hub.Config({
    "HTML-CSS": {
    preferredFont: "TeX",
    availableFonts: ["STIX", "TeX"],
    linebreaks: {
    automatic: true
    },
    EqnChunk: (MathJax.Hub.Browser.isMobile ? 10 : 50)
    },
    tex2jax: {
    inlineMath: [["\\(", "\\)"], ["\\\\(", "\\\\)"]],
    displayMath: [["$$", "$$"], ["\\[", "\\]"]],
    processEscapes: true,
    ignoreClass: "tex2jax_ignore|dno"
    },
    TeX: {
    noUndefined: {
    attributes: {
    mathcolor: "red",
    mathbackground: "#FFEEEE",
    mathsize: "90%"
    }
    }
    },
    Macros: {
    href: "{}"
    },
    skipStartupTypeset: true,
    messageStyle: "none",
    extensions: ["Safe.js"],
    });
</script>
<script type="text/javascript" nonce="onrkCvZTjD5mASaVwNDldw==">
  window.addEventListener("DOMContentLoaded", () => {
    const head = document.getElementsByTagName("head")[0];
    const lib = document.createElement("script");
    lib.type = "text/javascript";
    // Always use the production asset in local dev, which is served from GCS. We tried to proxy and / or serve this
    // in a better way in localhost, but it didn't work out. See b/328073416#comment8 for details.
    const forceProdHost = window.location.hostname === "localhost";
    lib.src = `${forceProdHost ? "https://www.kaggle.com" : ""}/static/mathjax/2.7.9/MathJax.js?config=TeX-AMS-MML_HTMLorMML`;
    head.appendChild(lib);
  });
</script>









  </div>
</body>
</html>
